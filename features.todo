Doing a 3D pool game with kind guidance from a dev.to Article

Goals:
  - Learn to code React with JSX format; style components graphically
  - recycle code and think in Components
  - learn to setup a React project
  - "yarn" usage as well as other common CLI tools
  - a bit of the package.json format for a React project 
  - adding unit tests to React code
  - producing a tangible React software project in less than a month

As per article:
https://dev.to/manan30/creating-a-rudimentary-pool-table-game-using-react-three-js-and-react-three-fiber-part-1-363l

 ✔ cra - initialize the folder using 'create-react-app' @done (21-03-30 09:37)
 ✔ add 2 more JS packages: "yarn add three react-three-fiber" @done (21-03-30 11:19)
 ✔ edit the default README.md which was generated by CRA @done (21-03-30 11:35)
 ✔ add a 'git' remote - to enable saving to Github @done (21-03-30 12:33)
 ✔ read 5 steps and do the 'main' branch adjustment @done (21-03-30 11:37)
 ✔ add Scene.js to hold a <Canvas> and inside it a <Scene> component @done (21-03-30 12:41)
 ✔ git commit! @done (21-03-30 12:41)
 ✔ add instructions to how to run app (into README.md) @done (21-03-30 13:25)
 ✔ do the first push to git 'main' branch @done (21-03-30 12:04)
 
 More learning:
 ✔ learn using "props" in React for components (pass function parameters to components) @done (21-04-01 18:05)
 ☐ learn to code event handlers in React (JSX/Javascript)
 ☐ Styled Components in React https://malcoded.com/posts/react-component-style/
 ☐ a CSS anchor smooth scroller (put under Laragon 'scroller')

Learn using Bootstrap 4 icon fonts called 'iconic':
  ✔ yarn add bootstrap-icons @done (21-04-01 17:58)
  ☐ include the whole font file as an asset (CSS)
  ☐ use a icon: proof by showing 
  ☐ what is the naming convention for "iconic" font icons?

Diverging from the 3D pool game concept onwards: 

 ✔ add a test component: OKButton @done (21-03-30 17:40)
 ☐ add basic touch (tap) handler, for mobile (to component)
 ☐ research gesture support on React and fiber (mobile UI)
 ☐ spike: a offline storage test (app data) in browser's web context: set, get
 ☐ spike: how to determine whether app has run once at least in web context: localStorage?
 ☐ spike: drag gesture use on mobile: show crosshair on where user's finger goes

The 5 steps for git 'main' branch use:
  https://stevenmortimer.com/5-steps-to-change-github-default-branch-from-master-to-main/

Solving 'git' oddities:
  https://www.educative.io/edpresso/the-fatal-refusing-to-merge-unrelated-histories-git-error
